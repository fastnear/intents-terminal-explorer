################################################################################
# Ratacat Configuration
#
# This file contains all available configuration options for Ratacat.
# Copy this file to .env and customize as needed.
#
# Configuration priority: CLI args > Environment variables > Defaults
################################################################################

#───────────────────────────────────────────────────────────────────────────────
# Data Source Selection
#───────────────────────────────────────────────────────────────────────────────

# SOURCE: Choose data source for blockchain data
#   ws  - WebSocket connection to Node server (real-time, low latency)
#   rpc - Direct NEAR RPC polling (more reliable, works without Node server)
# Default: ws
SOURCE=ws

#───────────────────────────────────────────────────────────────────────────────
# WebSocket Configuration (when SOURCE=ws)
#───────────────────────────────────────────────────────────────────────────────

# WS_URL: WebSocket server endpoint
# Should point to your Node breakout server
# Default: ws://127.0.0.1:63736
WS_URL=ws://127.0.0.1:63736

# WS_FETCH_BLOCKS: Whether to fetch full block data via WebSocket
# Set to false if you only want transaction events
# Default: true
WS_FETCH_BLOCKS=true

#───────────────────────────────────────────────────────────────────────────────
# NEAR RPC Configuration (when SOURCE=rpc)
#───────────────────────────────────────────────────────────────────────────────

# NEAR_NODE_URL: NEAR RPC endpoint
# Examples:
#   - FastNEAR Testnet: https://rpc.testnet.fastnear.com/
#   - FastNEAR Mainnet: https://rpc.mainnet.fastnear.com/
#   - Official Testnet: https://rpc.testnet.near.org
#   - Official Mainnet: https://rpc.mainnet.near.org
# Default: https://rpc.testnet.fastnear.com/
NEAR_NODE_URL=https://rpc.testnet.fastnear.com/

# FASTNEAR_AUTH_TOKEN: Authentication token for FastNEAR API
# Highly recommended to avoid rate limits when using FastNEAR endpoints
# Get your free token at: https://fastnear.com
# Default: none (unauthenticated requests)
# FASTNEAR_AUTH_TOKEN=your_auth_token_here

# ARCHIVAL_RPC_URL: Archival RPC endpoint for fetching historical blocks
# Enables navigation beyond the rolling 100-block buffer and ±12 block cache
# When you navigate to unavailable blocks, they'll be fetched from archival
# Requires FASTNEAR_AUTH_TOKEN to avoid rate limits
# Examples:
#   - FastNEAR Mainnet: https://archival-rpc.mainnet.fastnear.com
#   - FastNEAR Testnet: https://archival-rpc.testnet.fastnear.com
# Default: none (archival fetching disabled)
# ARCHIVAL_RPC_URL=https://archival-rpc.mainnet.fastnear.com

# POLL_INTERVAL_MS: Milliseconds between RPC polls for new blocks
# Lower = more real-time, higher = less load on RPC endpoint
# Range: 100-10000, Default: 1000 (1 second)
POLL_INTERVAL_MS=1000

# POLL_MAX_CATCHUP: Maximum blocks to fetch per poll cycle
# Prevents overwhelming the system during catch-up after disconnection
# Range: 1-100, Default: 5
POLL_MAX_CATCHUP=5

# POLL_CHUNK_CONCURRENCY: Number of concurrent chunk fetch requests
# Higher = faster catch-up, but more load on RPC endpoint
# Range: 1-16, Default: 4
POLL_CHUNK_CONCURRENCY=4

# RPC_TIMEOUT_MS: Timeout for individual RPC requests in milliseconds
# Increase if experiencing timeout errors on slow networks
# Range: 1000-60000, Default: 8000 (8 seconds)
RPC_TIMEOUT_MS=8000

# RPC_RETRIES: Number of retry attempts for failed RPC requests
# Each retry uses exponential backoff
# Range: 0-10, Default: 2
RPC_RETRIES=2

#───────────────────────────────────────────────────────────────────────────────
# UI Performance & Display
#───────────────────────────────────────────────────────────────────────────────

# RENDER_FPS: Target frames per second for UI rendering
# Lower FPS reduces CPU usage, higher FPS provides smoother updates
# Range: 1-120, Default: 30
RENDER_FPS=30

# RENDER_FPS_CHOICES: Available FPS options for Ctrl+O cycling
# Comma-separated list of FPS values
# Range per value: 1-120, Default: 20,30,60
RENDER_FPS_CHOICES=20,30,60

# KEEP_BLOCKS: Number of recent blocks to keep in memory
# Higher = more history available, but more memory usage
# Range: 10-10000, Default: 100
KEEP_BLOCKS=100

#───────────────────────────────────────────────────────────────────────────────
# History & Persistence
#───────────────────────────────────────────────────────────────────────────────

# SQLITE_DB_PATH: Path to SQLite database for block/transaction persistence
# Enables search (Ctrl+F) and jump marks persistence
# Supports relative paths (relative to working directory) or absolute paths
# Default: ./ratacat_history.db
SQLITE_DB_PATH=./ratacat_history.db

#───────────────────────────────────────────────────────────────────────────────
# Credentials & Account Filtering
#───────────────────────────────────────────────────────────────────────────────

# NEAR_CREDENTIALS_DIR: Directory containing NEAR credentials
# Used for "owned accounts" filtering (Ctrl+U)
# Default: $HOME/.near-credentials (or .near-credentials if HOME not set)
# NEAR_CREDENTIALS_DIR=/Users/yourname/.near-credentials

# NEAR_NETWORK: Network subdirectory within credentials dir
# Options: mainnet, testnet, betanet
# Default: mainnet
NEAR_NETWORK=mainnet

# WATCH_ACCOUNTS: Comma-separated list of NEAR accounts to watch
# Only show transactions to/from these accounts (signer OR receiver)
# This is the simple way to filter - just list account names
# Default: intents.near
# Examples:
#   WATCH_ACCOUNTS=intents.near
#   WATCH_ACCOUNTS=alice.near,bob.near,contract.near
#   WATCH_ACCOUNTS=  (empty = no filter, show all transactions)
WATCH_ACCOUNTS=intents.near

# DEFAULT_FILTER: Advanced filter syntax for power users
# Only used if WATCH_ACCOUNTS is not set
# Supports: acct:, signer:, receiver:, action:, method:, raw:
# Multiple terms use AND logic (all must match)
# Multiple accounts within same term use OR logic
# Examples:
#   DEFAULT_FILTER=acct:alice.near
#   DEFAULT_FILTER=signer:alice.near receiver:bob.near
#   DEFAULT_FILTER=method:ft_transfer
#   DEFAULT_FILTER=acct:alice.near acct:bob.near action:FunctionCall
# Default: acct:intents.near (if WATCH_ACCOUNTS not set)
# DEFAULT_FILTER=

#───────────────────────────────────────────────────────────────────────────────
# Examples for Common Use Cases
#───────────────────────────────────────────────────────────────────────────────

# Example 1: Local development with Node WebSocket
# SOURCE=ws
# WS_URL=ws://127.0.0.1:63736

# Example 2: Production monitoring of mainnet via RPC
# SOURCE=rpc
# NEAR_NODE_URL=https://rpc.mainnet.fastnear.com/
# FASTNEAR_AUTH_TOKEN=your_token_here
# RENDER_FPS=20
# KEEP_BLOCKS=200

# Example 3: High-performance local monitoring
# SOURCE=ws
# RENDER_FPS=60
# KEEP_BLOCKS=500

# Example 4: Low-resource monitoring (e.g., on Raspberry Pi)
# SOURCE=rpc
# RENDER_FPS=10
# KEEP_BLOCKS=50
# POLL_INTERVAL_MS=2000
# POLL_CHUNK_CONCURRENCY=2

# Example 5: Watch specific accounts
# WATCH_ACCOUNTS=my-dapp.near,my-other-contract.near
# SOURCE=rpc
# NEAR_NODE_URL=https://rpc.mainnet.fastnear.com/
